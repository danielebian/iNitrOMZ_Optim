% Here, specify iNitrOMZ root path ($PATHTOINSTALL/iNitrOMZ/)
 bgc1d_root='/data/project2/dbianchi/NitrOMZ/iNitrOMZ_v6.0/';
 addpath(genpath(bgc1d_root)); % adds root to MATLAB's search paths

% Parameters to tune.
 remin = 0.08/86400;

% Matrix of parameters for optimization
% Format: 	name 			min_value		max_value
 AllParam = {
%		'wup_param',		0.5e-7,			15.0e-7; 	...
%		'poc_flux_top',		-30/86400,		-3/86400; 	...
		'KO2Rem',		0.01,			3.0;		...
		'KNO2No',		0.01,			0.5;		...
		'KO2Den1',		0.01,			8.0;		...
		'KO2Den2',		0.01,			8.0;		...
		'KO2Den3',		0.01,			8;		...
		'KNO3Den1',		0.01,			8;		...
		'KDen1',		remin/10,		remin;		...
		'KDen2',		remin/10,		remin;		...
		'KDen3',		remin/10,		remin;		...
		'KNO2Den2',		0.001,			0.5;		...
		'KN2ODen3',		0.001,			0.5;		...
		'KAx',			remin/10,		remin*2;	...
		'KNH4Ax',		0.01,			0.5;		...
		'KNO2Ax',		0.01,			0.5;		...
		'KO2Ax',		0.01,			8;		...
		};

 param = AllParam(:,1)';
 param_min = [AllParam{:,2}];
 param_max = [AllParam{:,3}];
 param_mean = (param_min + param_max)/2;

% Constraints: KDen1 + KDen2 + KDen3 = remin
% NOTE: This constraint can be included in the GAM automatically
% But has to be hard-coded cor the CMAES optimization algorithm
%Aeq = [0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0];
 Aeq = [    0 0 0 0 0 0 1 1 1 0 0 0 0 0 0];
 beq = remin;
 
 nparam = size(param,2); % number of parameters
 
% Makes handle for cost function. x is an array of parameter values, param are the names which need to be passed 
 costfunc = @(x)bgc1d_fc2minimize(x,param);

% Options
 options = optimoptions('ga','ConstraintTolerance',1e-6,'PlotFcn', @gaplotbestf, ...
                        'UseParallel', true, 'UseVectorized', false,'Display','iter');

% Optimization
 param_out = ga(costfunc,nparam,[],[],Aeq,beq,param_min,param_max,[],options);

% Save ga output using today's date
 DateNow = bgc1d_getDate();
 save([bgc1d_root,'saveOut/ga_out_',DateNow,'.mat']);

